/**
 * This file was generated by the Jeddict
 */
package modelo;

import java.io.Serializable;
import java.util.Date;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import java.util.ArrayList;
import java.util.Objects;
import javax.persistence.ManyToOne;
import javax.persistence.Temporal;

/**
 * @author Admin
 */
@Entity
public class Respuesta implements Serializable, Comparable<Respuesta> {

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE)
    private Long id;
    private String respuesta;
    @Basic
    private Integer votosPositivos;
    @Basic
    private String titulo;
    @Basic
    private Integer votosNegativos;
    @Temporal(javax.persistence.TemporalType.TIMESTAMP)
    private Date fechaPublicacion;
    @OneToMany(targetEntity = Voto.class)
    private List<Voto> votos;
    @ManyToOne
    private UsuarioAcademico usuario;
    @ManyToOne
    private Pregunta pregunta;

    public Respuesta() {
        votos = new ArrayList<>();
        this.votosNegativos = 0;
        this.votosPositivos = 0;
        this.fechaPublicacion = new Date();
        this.usuario = null;
    }

    public Respuesta(String resp, String titu, UsuarioAcademico usuario, Pregunta pregunta) {
        this.pregunta = pregunta;
        this.respuesta = resp;
        votos = new ArrayList<>();
        this.titulo = titu;
        this.usuario = usuario;
        this.votosNegativos = 0;
        this.votosPositivos = 0;
        this.fechaPublicacion = new Date();
    }

    public String getRespuesta() {
        return respuesta;
    }

    public void setRespuesta(String respuesta) {
        this.respuesta = respuesta;
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Integer getVotosPositivos() {
        return this.votosPositivos;
    }

    public void setVotosPositivos(Integer votosPositivos) {
        this.votosPositivos = votosPositivos;
    }

    public Integer getVotosNegativos() {
        return this.votosNegativos;
    }

    public void setVotosNegativos(Integer votosNegativos) {
        this.votosNegativos = votosNegativos;
    }

    public Date getFechaPublicacion() {
        return this.fechaPublicacion;
    }

    public void setFechaPublicacion(Date fechaPublicacion) {
        this.fechaPublicacion = fechaPublicacion;
    }

    public List<Voto> getVotos() {
        return this.votos;
    }

    public void setVotos(List<Voto> votos) {
        this.votos = votos;
    }

    @Override
    public String toString() {
        return titulo;

    }

//obtengo el que realizo la pregunta como solo puede ser un usuario se va comparando
    public UsuarioAcademico obtenerPublicador() {

        return this.usuario;
    }

    public String getTitulo() {
        return titulo;
    }

    public void setTitulo(String titulo) {
        this.titulo = titulo;
    }

    public void agregarVoto(Voto voto) {
        this.votos.add(voto);
        if (voto.isVoto()) {
            this.aumentarVotosPositivos();
        } else {
            this.aumentarVotosNegativos();
        }

    }

    private void aumentarVotosPositivos() {
        this.votosPositivos++;
    }

    private void aumentarVotosNegativos() {
        this.votosNegativos++;
    }

    //el valor del voto cambio
    //si el voto nuevo es positivo aumentamos la reputacion
    //si es negativo disminuimos la reputacion,
    //si es positivo aumentamos los votos positivos y disminuimos los negativos
    public void modificarVoto(Boolean voto) {
        String tipo = this.usuario.getTipoUsuario();
        if (voto) {
            this.aumentarVotoViejo();

            if (!tipo.equals(Usuario.ADMINISTRADOR)) {
                this.usuario.aumentarReputacion();
            }

        } else {
            this.disminuirVotoViejo();
            if (!tipo.equals(Usuario.ADMINISTRADOR)) {
                this.usuario.disminuirReputacion();
            }

        }
    }

    private void aumentarVotoViejo() {
        this.votosPositivos++;
        this.votosNegativos--;
    }

    private void disminuirVotoViejo() {
        this.votosPositivos--;
        this.votosNegativos++;

    }

    @Override
    public int compareTo(Respuesta o) {
        if (this.fechaPublicacion.getTime() < o.getFechaPublicacion().getTime()) {
            return -1;
        }
        if (this.fechaPublicacion.getTime() > o.getFechaPublicacion().getTime()) {
            return 1;
        }
        return 0;
    }

    public Pregunta getPregunta() {
        return pregunta;
    }

    public void setPregunta(Pregunta pregunta) {
        this.pregunta = pregunta;
    }

    public Pregunta eliminarPregunta() {
        Pregunta vieja = this.pregunta;
        this.pregunta.quitarRespuesta(this);
        this.pregunta = null;
        return vieja;
    }

    public void eliminarUsuario() {
        this.usuario = null;
    }

    public UsuarioAcademico getUsuario() {
        return usuario;
    }

    public void setUsuario(UsuarioAcademico usuario) {
        this.usuario = usuario;
    }

}

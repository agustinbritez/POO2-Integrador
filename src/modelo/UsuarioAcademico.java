/**
 * This file was generated by the Jeddict
 */
package modelo;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.Basic;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.ManyToMany;
import javax.persistence.MappedSuperclass;
import javax.persistence.OneToMany;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

/**
 * @author Admin
 */
@Entity
@PrimaryKeyJoinColumn(referencedColumnName = "idU")
public class UsuarioAcademico extends Usuario implements Serializable {
//votos positivos que realizo este usuario

    @Basic
    private Integer votosPositivos;
//son los votos negativos que realizo este usuario
    @Basic
    private Integer votosNegativos;

    @OneToMany(targetEntity = Pregunta.class)
    private List<Pregunta> preguntas;

    @OneToMany(targetEntity = Respuesta.class)
    private List<Respuesta> respuestas;
//son los votos realizados, positivos y negativos
    @OneToMany(targetEntity = Voto.class)
    private List<Voto> votos;
    private Integer reputacion;
    @ManyToMany(targetEntity = Materia.class)
    private Set<Materia> materias;

    public UsuarioAcademico() {
        super();
        this.votosNegativos = 0;
        this.votosPositivos = 0;
        this.preguntas = new ArrayList<>();
        this.respuestas = new ArrayList<>();
        this.votos = new ArrayList<>();
        this.materias = new HashSet();
        this.reputacion = 0;
    }

    public UsuarioAcademico(String apellido, String nombre, String dni, String correo, String password, String tipoUsuario) {
        super(apellido, nombre, dni, correo, password, tipoUsuario);
        this.votosNegativos = 0;
        this.votosPositivos = 0;
        this.preguntas = new ArrayList<>();
        this.respuestas = new ArrayList<>();
        this.votos = new ArrayList<>();
        this.materias = new HashSet();
        this.reputacion = 0;
    }

    public Integer getVotosPositivos() {
        return this.votosPositivos;
    }

    public void setVotosPositivos(Integer votosPositivos) {
        this.votosPositivos = votosPositivos;
    }

    public Integer getVotosNegativos() {
        return this.votosNegativos;
    }

    public void setVotosNegativos(Integer votosNegativos) {
        this.votosNegativos = votosNegativos;
    }

    public List<Pregunta> getPreguntas() {
        return this.preguntas;
    }

    public void setPreguntas(List<Pregunta> preguntas) {
        this.preguntas = preguntas;
    }

    public List<Respuesta> getRespuestas() {
        return this.respuestas;
    }

    public void setRespuestas(List<Respuesta> respuestas) {
        this.respuestas = respuestas;
    }

    public List<Voto> getVotos() {
        return this.votos;
    }

    public void setVotos(List<Voto> votos) {
        this.votos = votos;
    }

   

    public void agregarRespuesta(Respuesta e) {
        this.getRespuestas().add(e);
    }

    public void agregarPregunta(Pregunta e) {
        this.getPreguntas().add(e);
    }

    public void quitarRespuesta(Respuesta e) {
        this.getRespuestas().remove(e);
        //e.eliminarUsuario();
    }

    public void quitarPregunta(Pregunta e) {
        this.getPreguntas().remove(e);
        //e.eliminarUsuario();
    }

    public void agregarVoto(Voto voto) {
        this.votos.add(voto);
        if (voto.isVoto()) {
            this.votosPositivos++;
        } else {
            this.votosNegativos++;
        }
    }

    private void aumentarVotosPositivos() {
        this.votosPositivos++;
    }

    private void aumentarVotosNegativos() {
        this.votosNegativos++;
    }

    private void disminuirVotosPositivos() {
        this.votosPositivos--;
    }

    private void disminuirVotosNegativos() {
        this.votosNegativos--;
    }
//solo se quita un voto cuando se va a eliminar

    public void quitarVoto(Voto voto) {
        if (voto.isVoto()) {
            this.disminuirVotosPositivos();
            this.disminuirReputacion();
        } else {
            this.disminuirVotosNegativos();
        }
        this.votos.remove(voto);

    }

    //el valor del voto cambio
    public void modificarVoto(Boolean voto) {
        if (voto) {
            this.aumentarVotoViejo();
        } else {
            this.diminuirVotoVijeo();
        }
    }

    private void aumentarVotoViejo() {
        this.votosPositivos++;
        this.votosNegativos--;
    }

    private void diminuirVotoVijeo() {
        this.votosNegativos++;
        this.votosPositivos--;
    }

    public Integer getReputacion() {
        return reputacion;
    }

    public void setReputacion(Integer reputacion) {
        this.reputacion = reputacion;
    }

    public Set<Materia> getMaterias() {
        return materias;
    }

    public void setMaterias(Set<Materia> materias) {
        this.materias = materias;
    }

    public void agregarMateria(Materia e) {
        this.materias.add(e);
        Set<UsuarioAcademico> profesores = e.getProfesores();
        profesores.add(this);
    }

    public void quitarMateria(Materia e) {
        this.materias.remove(e);
        Set<UsuarioAcademico> profesores = e.getProfesores();
        profesores.remove(this);
    }

    public void aumentarReputacion() {
        this.reputacion++;
    }

    public void disminuirReputacion() {
        this.reputacion--;
    }

}
